services:

  # react frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - 5173:5173
    develop:
      watch:
        - action: sync
          path: ./frontend  # local machine
          target: ./frontend  # inside container
          ignore:
            - node_modules

  # django backend
  backend:
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - ./backend:/backend
    command: >
      sh -c "python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    environment:  # creds exposed just for local development
      - DB_HOST=db
      - DB_NAME=db
      - DB_USER=user
      - DB_PASSWORD=localpass
      - CELERY_BROKER_URL=amqp://mq_user:mq_localpass@mq:5672//
    depends_on:
      db:
        condition: service_healthy

  # postgres db
  db:
    image: postgres:17.1
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5433:5432  # remapped to 5433 to avoid conflict with local posgresql
    environment:  # creds exposed just for local development
      - POSTGRES_DB=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=localpass
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "db", "-U", "user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # task broker
  mq:
    image: rabbitmq:3.13.7-alpine
    environment:  # creds exposed just for local development
      - RABBITMQ_DEFAULT_USER=mq_user
      - RABBITMQ_DEFAULT_PASS=mq_localpass

  # background task runner
  celery_worker:
    build:
      context: .
    volumes:
      - ./backend:/backend
    command: >
      sh -c "celery -A backend worker --loglevel=info"
    environment: # creds exposed just for local development
      - DB_HOST=db
      - DB_NAME=db
      - DB_USER=user
      - DB_PASSWORD=localpass
      - CELERY_BROKER_URL=amqp://mq_user:mq_localpass@mq:5672//
    depends_on:
      - backend
      - mq

# persisted volumes
volumes:
  db-data:
